"""
Spr√°vca cit√°ci√≠ a bibliografie pre dizertaƒçn√∫ pr√°cu.
"""

import logging
from typing import Dict, List, Any


class CitationManager:
    """Spr√°vca cit√°ci√≠ v r√¥znych form√°toch (APA, MLA, Chicago)."""
    
    def __init__(self):
        """Inicializ√°cia spr√°vcu cit√°ci√≠."""
        self.logger = logging.getLogger(__name__)
        self.citations = []  # Ulo≈æen√© cit√°cie
        
    def handle_citation_query(self, command: str) -> str:
        """
        Spracuje dotaz t√Ωkaj√∫ci sa cit√°ci√≠.
        
        Args:
            command: Pr√≠kaz od pou≈æ√≠vateƒæa
            
        Returns:
            Odpoveƒè spr√°vcu cit√°ci√≠
        """
        command_lower = command.lower()
        
        if "bibliography" in command_lower or "bibliografia" in command_lower:
            return self.generate_bibliography()
        elif "cite" in command_lower or "cituj" in command_lower:
            source = self._extract_source(command)
            return self.create_citation(source)
        elif "format" in command_lower or "form√°t" in command_lower:
            return self.show_citation_formats()
        else:
            return "Dostupn√© pr√≠kazy: cite [zdroj], bibliography, format [≈°t√Ωl]"
    
    def create_citation(self, source_info: str, style: str = "APA") -> str:
        """
        Vytvor√≠ cit√°ciu v po≈æadovanom form√°te.
        
        Args:
            source_info: Inform√°cie o zdroji
            style: ≈†t√Ωl cit√°cie (APA, MLA, Chicago)
            
        Returns:
            Form√°tovan√° cit√°cia
        """
        if style.upper() == "APA":
            return self._format_apa_citation(source_info)
        elif style.upper() == "MLA":
            return self._format_mla_citation(source_info)
        elif style.upper() == "CHICAGO":
            return self._format_chicago_citation(source_info)
        else:
            return f"Nepodporovan√Ω ≈°t√Ωl cit√°cie: {style}. Podporovan√©: APA, MLA, Chicago"
    
    def _format_apa_citation(self, source_info: str) -> str:
        """Form√°tuje cit√°ciu v APA ≈°t√Ωle."""
        return f"""
APA Cit√°cia:
Pre korektn√© vytvorenie APA cit√°cie potrebujem:
- Meno autora (Priezvisko, M. M.)
- Rok publik√°cie (YYYY)
- N√°zov diela
- Vydavateƒæ/ƒåasopis
- DOI alebo URL (ak je dostupn√©)

Pr√≠klad: Smith, J. A. (2023). N√°zov ƒçl√°nku. Journal Name, 15(3), 45-67. https://doi.org/10.xxxx

Poskytnut√© inform√°cie: {source_info}

Pros√≠m dopl≈àte ch√Ωbaj√∫ce √∫daje pre presnej≈°iu cit√°ciu.
        """
    
    def _format_mla_citation(self, source_info: str) -> str:
        """Form√°tuje cit√°ciu v MLA ≈°t√Ωle."""
        return f"""
MLA Cit√°cia:
Pre korektn√© vytvorenie MLA cit√°cie potrebujem:
- Meno autora (Priezvisko, Meno)
- N√°zov diela (v uvodzovk√°ch alebo kurz√≠vou)
- N√°zov kontajnera (ƒçasopis, kniha)
- Vydavateƒæ
- D√°tum publik√°cie
- Umiestnenie (strany, URL)

Pr√≠klad: Smith, John A. "N√°zov ƒçl√°nku." Journal Name, vol. 15, no. 3, 2023, pp. 45-67.

Poskytnut√© inform√°cie: {source_info}

Pros√≠m dopl≈àte ch√Ωbaj√∫ce √∫daje pre presnej≈°iu cit√°ciu.
        """
    
    def _format_chicago_citation(self, source_info: str) -> str:
        """Form√°tuje cit√°ciu v Chicago ≈°t√Ωle."""
        return f"""
Chicago Cit√°cia:
Pre korektn√© vytvorenie Chicago cit√°cie potrebujem:
- Meno autora (Priezvisko, Meno)
- N√°zov diela
- Miesto publik√°cie
- Vydavateƒæ
- Rok publik√°cie

Pr√≠klad: Smith, John A. "N√°zov ƒçl√°nku." Journal Name 15, no. 3 (2023): 45-67.

Poskytnut√© inform√°cie: {source_info}

Pros√≠m dopl≈àte ch√Ωbaj√∫ce √∫daje pre presnej≈°iu cit√°ciu.
        """
    
    def generate_bibliography(self) -> str:
        """
        Vytvor√≠ zoznam literat√∫ry zo v≈°etk√Ωch ulo≈æen√Ωch cit√°ci√≠.
        
        Returns:
            Form√°tovan√° bibliografia
        """
        if not self.citations:
            return """
üìö Bibliografia je moment√°lne pr√°zdna.

Pre pridanie cit√°ci√≠ pou≈æite pr√≠kaz: cite [inform√°cie o zdroji]

Pr√≠klady:
- cite Smith, J. (2023). N√°zov knihy. Vydavateƒæstvo
- cite "N√°zov ƒçl√°nku" Journal Name 2023
            """
        
        bibliography = "üìö BIBLIOGRAFIA\n\n"
        for i, citation in enumerate(self.citations, 1):
            bibliography += f"{i}. {citation}\n\n"
        
        return bibliography
    
    def add_citation(self, citation: str) -> str:
        """
        Prid√° cit√°ciu do zoznamu.
        
        Args:
            citation: Form√°tovan√° cit√°cia
            
        Returns:
            Potvrdenie o pridan√≠
        """
        self.citations.append(citation)
        return f"‚úÖ Cit√°cia pridan√° do bibliografie. Celkov√Ω poƒçet: {len(self.citations)}"
    
    def show_citation_formats(self) -> str:
        """Zobraz√≠ dostupn√© form√°ty cit√°ci√≠ s pr√≠kladmi."""
        return """
üìñ FORM√ÅTY CIT√ÅCI√ç

üîπ APA (American Psychological Association)
   Kniha: Smith, J. A. (2023). N√°zov knihy. Vydavateƒæstvo.
   ƒål√°nok: Smith, J. A. (2023). N√°zov ƒçl√°nku. Journal Name, 15(3), 45-67.

üîπ MLA (Modern Language Association)
   Kniha: Smith, John A. N√°zov knihy. Vydavateƒæstvo, 2023.
   ƒål√°nok: Smith, John A. "N√°zov ƒçl√°nku." Journal Name, vol. 15, no. 3, 2023, pp. 45-67.

üîπ Chicago (Chicago Manual of Style)
   Kniha: Smith, John A. N√°zov knihy. Miesto: Vydavateƒæstvo, 2023.
   ƒål√°nok: Smith, John A. "N√°zov ƒçl√°nku." Journal Name 15, no. 3 (2023): 45-67.

Pre vytvorenie cit√°cie pou≈æite: cite [inform√°cie] format [≈°t√Ωl]
        """
    
    def validate_citation(self, citation: str, style: str = "APA") -> str:
        """
        Over√≠ spr√°vnos≈• form√°tu cit√°cie.
        
        Args:
            citation: Cit√°cia na overenie
            style: ≈†t√Ωl cit√°cie
            
        Returns:
            Hodnotenie a n√°vrhy na zlep≈°enie
        """
        return f"""
üîç OVERENIE CIT√ÅCIE ({style} ≈°t√Ωl)

Cit√°cia: {citation}

‚ö†Ô∏è Pre √∫pln√© overenie by som potreboval ≈°pecializovan√Ω n√°stroj.

Z√°kladn√© kontroly:
‚úì Skontrolujte interpunkciu
‚úì Over√≠ poradie inform√°ci√≠
‚úì Skontrolujte kurz√≠vu/√∫vodzovky
‚úì Over√≠ d√°tumy a ƒç√≠sla str√°n

Odpor√∫ƒçam pou≈æi≈• ≈°pecializovan√Ω n√°stroj ako Zotero, Mendeley alebo ofici√°lne ≈°t√Ωlov√© pr√≠ruƒçky.
        """
    
    def _extract_source(self, command: str) -> str:
        """Extrahuje inform√°cie o zdroji z pr√≠kazu."""
        # Odstr√°ni pr√≠kazov√© slov√°
        words_to_remove = ['cite', 'cituj', 'format', 'form√°t']
        words = command.split()
        source_words = [word for word in words if word.lower() not in words_to_remove]
        return ' '.join(source_words) if source_words else "neurƒçen√Ω zdroj"